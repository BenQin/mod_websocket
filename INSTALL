// $Id$

- Install lighty with mod_websocket

1.Get the lighttpd source from

  http://www.lighttpd.net/download/

  $ tar xzvf lighttpd-1.4.x.tar.gz

2.Install tools and libraries necessary for making lighttpd
  if you don't have.

  1.autotools

    automake-1.x package contains autoheader, autoconf,
    automake, m4 etc...
    But on ubuntu, only libtool has been excluded.

    exmaple for ubuntu.
    $ sudo apt-get install automake-1.x
    $ sudo apt-get install libtool

    And I recommend you to install version 1.9 or later.

  2.pcre lib( http://www.pcre.org/ )
    $ sudo apt-get install libpcre3 libpcre3-dev

  3.zlib-dev
    $ sudo apt-get install zlib1g-dev

  4.bzip2-dev
    $ sudo apt-get install libbz2-dev

  If you want to make mod_websocket/src/sample/*.c,
  need to install libevent.

  5.libevent
    ( http://www.monkey.org/~provos/libevent/ )

    $ sudo apt-get install libevent-dev

  If you want to use SSL and wss, install openssl and openssl lib.

  6.openssl
    $ sudo apt-get install openssl libssl-dev

3.Patch the source

  $ cd lighttpd-1.4.x/
  $ patch -p1 < mod_websocket.patch

  note: this patch contains a mod-connect.patch 
  ( http://redmine.lighttpd.net/attachments/997/mod-connect.patch )

4.copy mod_websocket.c into src dir and make lighty.

  $ cp mod_websocket.c lighttd-1.4.x/src/
  $ cd lighttpd-1.4.x

  When you configure the first, do autogen.sh at once.
  (because of patched src/Makefile.am)

  $ ./autogen.sh

  $ ./configure --with-your-options
  $ make
  $ sudo make install

5. check for mod_websocket.so

  $ cd lighttd-1.4.x/src/.libs
  $ ls -l mod_websocket.*

  or 

  $ ls -l /usr/local/lib/mod_websocket.*

  If mod_websocket.* exists in dir, you can use mod_websocket!
  Write lighttpd.conf like below.

6.Add setting for mod_websocket into lighttpd.conf

  5-1. add websocket module into server.modules section.

  server.modules              = ( "mod_websocket", ... )

  5-2. add websocket.server section like this.

  websocket.server = (
  		     "/echo" => ( "host" => "127.0.0.1",
		                  "port" => 7 ),
		     "/func" => ( "host" => "192.168.0.10",
		                  "port" => 8000 )
                     )

// EOF
