// $Id$

- Install lighty with mod_websocket

1.Check your environment
  - dependent tools and libs[mandatory]
    1.autotools
    exmaple for ubuntu.
    $ sudo apt-get install automake
    $ sudo apt-get install libtool

    And I recommend you to install version 1.9 or later.

    2.libev-dev
    $ sudo apt-get install libev3 libev-dev

    3.libcunit-dev ( http://cunit.sourceforge.net/ )
    $ sudo apt-get install libcunit1 libcunit1-dev

    4.libicu-dev ( http://site.icu-project.org/ )
    $ sudo apt-get install libicu42 libicu-dev

    5.libpcre-dev ( http://www.pcre.org/ )
    $ sudo apt-get install libpcre3 libpcre3-dev

    6.zlib-dev
    $ sudo apt-get install zlib1g-dev

    7.bzip2-dev
    $ sudo apt-get install libbz2-dev

  - dependent libs[optional]
    8.openssl
    If you want to use SSL and wss, install openssl and openssl lib.
    $ sudo apt-get install openssl libssl-dev

2.Test mod_websocket
  $ cd mod_websocket
  $ ./bootstrap
  $ ./configure --with-websocket[=RFC-6455, IETF-{00,08}]
  $ make clean check

  If bootstrap or configure failed, check your environment again.
  If make check failed, plz send config.log and make check output to
  me.

3.Get the lighttpd-1.4.28 source from
  http://www.lighttpd.net/download/

  $ tar xzvf lighttpd-1.4.28.tar.gz

4.Install mod_websocket into lighty's dir

  NOTICE:
  Lighttpd is applied some patches by installing this module.

  $ cd mod_websocket
  $ ./bootstrap
  $ ./configure --with-lighttpd=/path/to/lighttpd_top_srcdir
  $ make install

5.Make lighty w/ mod_websocket

  $ cd /path/to/lighttpd_top_srcdir
  $ ./autogen.sh
  $ ./configure --with-websocket[=RFC-6455, IETF-{00,08}] [--without-libicu] [--with-openssl] ...

  If you want to use latest spec, plz specify --with-websocket
  And If you want not to use UTF-8 {validation, conversion},
  plz specify --without-libicu (But this option may occur severe security hole.)

  $ make
  $ sudo make install

6.Add setting for mod_websocket into lighttpd.conf

  6-1. add websocket module into server.modules section.

  server.modules              = ( "mod_websocket", ... )

  6-2. add websocket.server section like below.
       "origins" treats IP Address and FQDN as another value.

  websocket.server = (
                     "/echo" =>    ( "host" => "127.0.0.1",
                                     "port" => "echo" ),
                     "/binary" =>  ( "host" => "127.0.0.1",
                                     "port" => "7000",
                                     "type" => "bin" ),
                     "/func" =>    ( "host" => "192.168.0.10",
                                     "port" => "8000" ),
                     "/strict1" => ( "host" => "127.0.0.1",
                                     "port" => "9000",
                                     "origins" => ( "example.com" ) ),
                     "/strict2" => ( "host" => "127.0.0.1",
                                     "port" => "9001",
                                     "origins" => ( "example.com",
                                                    "192.168.0.1" ) ),
                     "/subproto" => (
                                     ( "host" => "127.0.0.1",
                                       "port" => "9002",
                                       "subproto" => "subproto1"
                                     ),
                                     ( "host" => "127.0.0.1",
                                       "port" => "9003",
                                       "subproto" => "subproto2"
                                     )
                                    ),
                     "/locale" => (
                                    "host" => "192.168.0.5",
                                    "port" => "9000",
                                    "locale" => "EUCJP"
                                  )
                     )

  6-3. locale
       If a backend server uses non UTF-8 locale, plz set the locale
       into configration.
       If not set locale, mod_websocket treats all messages as UTF-8.

  6-4. handling TIMEOUT
       add websocket.timeout section.
       default value is 30(sec). And if set to 0, never timeout
       websocket connection.(be care!)

  websocket.timeout = 30

  6-5. send PING frame
       This parameter becomes effective only at --with-websocket=IETF-08.
       add websocket.ping_interval section.(sec)
       not send PING frame by default.

  websocket.ping_interval = 5

  6-6. write log
       If something wrong, set websocket.debug to write error.log

  websocket.debug = 0
  # websocket.debug = 1 # LOG_ERR
  # websocket.debug = 2 # LOG_WARNING
  # websocket.debug = 3 # LOG_INFO
  # websocket.debug = 4 # LOG_DEBUG

7. websocket.server section format
   "host"  = STRING          : FQDN or IPAddr [mandatory]
   "service" = STRING        : port number or service name [mandatory]
   "type"  = "bin" or "text" : payload type [optional]
                               case insensitive, default = "text"
                               This parameter becomes effective only at
                               --with-websocket=IETF-08.
   "origins" = STRING ARRAY  : part of domain or IPAddr [optional]
                               enable to access only from specified origins.
                               NOTE: it's easy to misrepresent origin by an
                               original application.
   "subproto" = STRING       : sub protocol [optional]
   "locale" = STRING         : locale string [optional]
                               If you use character encodings other than UTF-8
                               on backend server, set this param properly.

   ex.
   +---------+            +--------+            +------------------+
   | browser | <--------> | lighty | <--------> | CHAT server      |
   |         |  Internet  |        |  Localnet  | 192.168.0.2:9000 |
   |  UTF-8  |            |        |            | encoding = EUCJP |
   +---------+            +--------+            +------------------+
               <-------->            <-------->
                  UTF-8                 EUCJP

   websocket.server = (
                       "/chat" => (
                                    "host" => "192.168.0.2",
                                    "port" => "9000",
                                    "locale" => "EUCJP"
                                  )
                      )

   and wrote javascript like this.

   var ws = new WebSocket("ws://lighty.addr/chat");

// EOF
