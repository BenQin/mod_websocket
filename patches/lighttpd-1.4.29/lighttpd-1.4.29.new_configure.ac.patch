--- lighttpd-1.4.29.orig/configure.ac	2012-01-18 11:45:10.680414395 +0900
+++ lighttpd-1.4.29.new/configure.ac	2012-01-24 13:07:03.039566657 +0900
@@ -67,6 +67,13 @@
 AC_TYPE_OFF_T
 AC_TYPE_PID_T
 AC_TYPE_SIZE_T
+AC_CHECK_SIZEOF(size_t)
+
+dnl Checks for Endian
+AC_C_BIGENDIAN
+if test "x$ac_cv_c_bigendian" = "xyes"; then
+    CFLAGS="$CFLAGS -DWORDS_BIGENDIAN"
+fi
 
 AC_CHECK_MEMBER(struct tm.tm_gmtoff,[AC_DEFINE([HAVE_STRUCT_TM_GMTOFF],[1],[gmtoff in struct tm])],,[#include <time.h>])
 AC_CHECK_TYPES(struct sockaddr_storage,,,[#include <sys/socket.h>])
@@ -604,6 +611,57 @@
 LIGHTTPD_VERSION_ID=`echo $PACKAGE_VERSION | $AWK -F '.' '{print "(" $1 " << 16 | " $2 " << 8 | " $3 ")"}'`
 AC_DEFINE_UNQUOTED([LIGHTTPD_VERSION_ID], [$LIGHTTPD_VERSION_ID], [lighttpd-version-id])
 
+dnl check for websocket support
+AC_MSG_CHECKING(whether --with-websocket option specified)
+AC_ARG_WITH(
+        websocket,
+        AC_HELP_STRING([--with-websocket@<:@=RFC-6455/IETF-00/IETF-08@:>@],
+                       [specify websocket version@<:@default=RFC-6455@:>@]),
+        [ websocket=$withval ],
+        [ websocket=no ])
+AC_MSG_RESULT(${websocket})
+if test "x${websocket}" == "xyes" ||
+   test "x${websocket}" == "xrfc-6455" ||
+   test "x${websocket}" == "xRFC-6455"; then
+   websocket="RFC-6455"
+   WEBSOCKET_VERSION_CFLAGS="-D_MOD_WEBSOCKET_SPEC_RFC_6455_"
+elif test "x${websocket}" == "xietf-00" ||
+     test "x${websocket}" == "xIETF-00"; then
+   WEBSOCKET_VERSION_CFLAGS="-D_MOD_WEBSOCKET_SPEC_IETF_00_"
+elif test "x${websocket}" == "xietf-08" ||
+     test "x${websocket}" == "xIETF-08"; then
+   WEBSOCKET_VERSION_CFLAGS="-D_MOD_WEBSOCKET_SPEC_IETF_08_"
+elif test "x${websocket}" != "xno"; then
+   AC_MSG_ERROR([websocket option is invalid. plz specify  RFC-6455, IETF-{00,08}])
+fi
+AC_SUBST(websocket)
+AC_SUBST(WEBSOCKET_VERSION_CFLAGS)
+AM_CONDITIONAL(WITH_WEBSOCKET, test x$websocket != xno)
+AM_CONDITIONAL(WEBSOCKET_USE_OPENSSL, test x$use_openssl = xyes)
+
+dnl check for icu lib
+AC_MSG_CHECKING(whether --with-libicu option specified)
+AC_ARG_WITH(
+        libicu,
+        AC_HELP_STRING([--with-libicu@<:@=PATH@:>@],
+                       [Include libicu support for websocket in PATH/include and PATH/lib]),
+        [ with_icu=$withval ],
+        [ with_icu=yes ])
+AC_MSG_RESULT(${with_icu})
+if test "x${with_icu}" == "xyes"; then
+   WEBSOCKET_ICU_CFLAGS="-D_MOD_WEBSOCKET_WITH_ICU_"
+   WEBSOCKET_ICU_LIBS="-licui18n -licuuc"
+elif test "x${with_icu}" != "xno"; then
+   WEBSOCKET_ICU_CFLAGS="-D_MOD_WEBSOCKET_WITH_ICU_ -I${with_icu}/include"
+   WEBSOCKET_ICU_LIBS="-L${with_icu}/lib -licui18n -licuuc"
+else
+   WEBSOCKET_ICU_CFLAGS=
+   WEBSOCKET_ICU_LIBS=
+fi
+AC_SUBST(WEBSOCKET_ICU_CFLAGS)
+AC_SUBST(WEBSOCKET_ICU_LIBS)
+AM_CONDITIONAL(WITH_LIBICU, test x$with_icu != xno)
+
 AC_CONFIG_FILES([Makefile src/Makefile
 		 doc/config/conf.d/Makefile \
 		 doc/config/vhosts.d/Makefile \
@@ -735,6 +793,13 @@
 	disable_feature="$disable_feature $features"
 fi
 
+dnl websocket
+plugins="mod_websocket"
+if test "x${websocket}" != "xno"; then
+       do_build="$do_build $plugins(${websocket})"
+else
+       no_build="$no_build $plugins"
+fi
 
 dnl output
 
