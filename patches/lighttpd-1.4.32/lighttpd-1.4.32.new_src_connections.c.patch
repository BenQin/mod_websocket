--- lighttpd-1.4.32.orig/src/connections.c	2012-11-07 22:16:36.000000000 +0900
+++ lighttpd-1.4.32.new/src/connections.c	2012-12-18 14:47:19.000000000 +0900
@@ -1173,6 +1173,8 @@ found_header_end:
 		}
 
 		break;
+	case CON_STATE_READ_CONTINUOUS:
+		break;
 	default: break;
 	}
 
@@ -1247,7 +1249,8 @@ static handler_t connection_handle_fdeve
 	}
 
 	if (con->state == CON_STATE_READ ||
-	    con->state == CON_STATE_READ_POST) {
+	    con->state == CON_STATE_READ_POST ||
+	    con->state == CON_STATE_READ_CONTINUOUS) {
 		connection_handle_read_state(srv, con);
 	}
 
@@ -1507,6 +1510,9 @@ int connection_state_machine(server *srv
 				done = -1;
 			case HANDLER_WAIT_FOR_EVENT:
 				/* come back here */
+				if (con->state == CON_STATE_READ_CONTINUOUS) {
+					break;
+				}
 				connection_set_state(srv, con, CON_STATE_HANDLE_REQUEST);
 
 				break;
@@ -1646,12 +1652,16 @@ int connection_state_machine(server *srv
 			break;
 		case CON_STATE_READ_POST:
 		case CON_STATE_READ:
+		case CON_STATE_READ_CONTINUOUS:
 			if (srv->srvconf.log_state_handling) {
 				log_error_write(srv, __FILE__, __LINE__, "sds",
 						"state for fd", con->fd, connection_get_state(con->state));
 			}
 
 			connection_handle_read_state(srv, con);
+			if (con->state == CON_STATE_READ_CONTINUOUS) {
+				plugins_call_read_continuous(srv, con);
+			}
 			break;
 		case CON_STATE_WRITE:
 			if (srv->srvconf.log_state_handling) {
@@ -1820,6 +1830,9 @@ int connection_state_machine(server *srv
 			fdevent_event_del(srv->ev, &(con->fde_ndx), con->fd);
 		}
 		break;
+	case CON_STATE_READ_CONTINUOUS:
+		/* leave up to plugins */
+		break;
 	default:
 		fdevent_event_del(srv->ev, &(con->fde_ndx), con->fd);
 		break;
